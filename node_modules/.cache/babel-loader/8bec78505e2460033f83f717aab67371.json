{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welcome\\\\Documents\\\\Creat React App\\\\todo-list\\\\src\\\\Components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  const [changes, setChanges] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [editTodo, setEditTodo] = useState(\"\");\n  const [show, setShow] = useState(false); //   console.log(changes);\n\n  const handleSubmit = () => {\n    if (changes !== \"\") {\n      setTodos(prev => [...prev, changes]);\n      setChanges(\"\");\n    }\n  };\n\n  const handleDel = index => {\n    setTodos(todos.filter((_, index1) => index1 !== index)); //index1=[0, 1, 2, 3,...]  index= vị trí click\n  };\n\n  const handleEdit = (todo, index) => {\n    setShow(true); // const temp = todos.splice(index, 1);\n    // console.log(todo);\n\n    setEditTodo(todo, index); // setTodos(temp)\n    // todo= false;\n  };\n\n  const handleUpdateTodo = () => {\n    // console.log(\"a\")\n    // const newTodos = [...todos];\n    // const index = newTodos.findIndex( (element) => element === editTodo);\n    // newTodos.splice(index, 1, editTodo);\n    // setTodos(prev=>[...prev, editTodo]);\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        value: changes,\n        onChange: e => setChanges(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        onClick: handleSubmit,\n        children: \"Add To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: editTodo,\n        onChange: e => setEditTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTodo,\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !show && todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"del-button\",\n          onClick: () => handleDel(index),\n          children: \"Del\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(todo, index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"Zd70Jlpqb+P3MVQmqY/vVg68o8M=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Welcome/Documents/Creat React App/todo-list/src/Components/TodoForm.js"],"names":["useState","Todo","TodoForm","changes","setChanges","todos","setTodos","editTodo","setEditTodo","show","setShow","handleSubmit","prev","handleDel","index","filter","_","index1","handleEdit","todo","handleUpdateTodo","e","target","value","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC,CAJkB,CAMlB;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzB,QAAIR,OAAO,KAAK,EAAhB,EAAoB;AAClBG,MAAAA,QAAQ,CAAEM,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUT,OAAV,CAAX,CAAR;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GALD;;AAOA,QAAMS,SAAS,GAAIC,KAAD,IAAW;AAC3BR,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAa,CAACC,CAAD,EAAIC,MAAJ,KAAeA,MAAM,KAAKH,KAAvC,CAAD,CAAR,CAD2B,CAC8B;AAC1D,GAFD;;AAIA,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOL,KAAP,KAAiB;AAClCJ,IAAAA,OAAO,CAAC,IAAD,CAAP,CADkC,CAElC;AACA;;AACAF,IAAAA,WAAW,CAACW,IAAD,EAAOL,KAAP,CAAX,CAJkC,CAMlC;AACA;AACD,GARD;;AASA,QAAMM,gBAAgB,GAAG,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACAV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAEP,OAFT;AAGE,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEZ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAuBGF,IAAI,iBACH;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEF,QAAd;AAAwB,QAAA,QAAQ,EAAGc,CAAD,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEH,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAxBJ,eA6BE;AAAA,gBACG,CAACX,IAAD,IACCJ,KAAK,CAACmB,GAAN,CAAU,CAACL,IAAD,EAAOL,KAAP,kBACR;AAAA,mBACGK,IADH,eAEE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAMN,SAAS,CAACC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,OAAO,EAAE,MAAMI,UAAU,CAACC,IAAD,EAAOL,KAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAASA,KAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAjFQZ,Q;;KAAAA,Q;AAmFT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoForm() {\r\n  const [changes, setChanges] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [editTodo, setEditTodo] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  //   console.log(changes);\r\n\r\n  const handleSubmit = () => {\r\n    if (changes !== \"\") {\r\n      setTodos((prev) => [...prev, changes]);\r\n      setChanges(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDel = (index) => {\r\n    setTodos(todos.filter((_, index1) => index1 !== index)); //index1=[0, 1, 2, 3,...]  index= vị trí click\r\n  };\r\n\r\n  const handleEdit = (todo, index) => {\r\n    setShow(true);\r\n    // const temp = todos.splice(index, 1);\r\n    // console.log(todo);\r\n    setEditTodo(todo, index);\r\n\r\n    // setTodos(temp)\r\n    // todo= false;\r\n  };\r\n  const handleUpdateTodo = () => {\r\n    // console.log(\"a\")\r\n    // const newTodos = [...todos];\r\n    // const index = newTodos.findIndex( (element) => element === editTodo);\r\n    // newTodos.splice(index, 1, editTodo);\r\n    // setTodos(prev=>[...prev, editTodo]);\r\n    setShow(false)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          className=\"todo-input\"\r\n          value={changes}\r\n          onChange={(e) => setChanges(e.target.value)}\r\n        />\r\n        <button className=\"todo-button\" onClick={handleSubmit}>\r\n          Add To Do\r\n        </button>\r\n      </div>\r\n      {/* {todos.map(\r\n        (todo, index) =>\r\n          show && (\r\n            <Todo\r\n              todoProp={todo}\r\n              key={index}\r\n              onChangeForm={handleUpdateTodo}\r\n              index={index}\r\n            />\r\n          )\r\n      )} */}\r\n\r\n      {show && (\r\n        <>\r\n          <input value={editTodo} onChange={(e)=>setEditTodo(e.target.value)} />\r\n          <button onClick={handleUpdateTodo}>update</button>\r\n        </>\r\n      )}\r\n      <ul>\r\n        {!show &&\r\n          todos.map((todo, index) => (\r\n            <li key={index}>\r\n              {todo}\r\n              <button className=\"del-button\" onClick={() => handleDel(index)}>\r\n                Del\r\n              </button>\r\n              <button onClick={() => handleEdit(todo, index)}>Edit</button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}