{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welcome\\\\Documents\\\\Creat React App\\\\todo-list\\\\src\\\\Components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  const [changes, setChanges] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [show, setShow] = useState(false); //   console.log(changes);\n\n  const handleSubmit = () => {\n    if (changes !== \"\") {\n      setTodos(prev => [...prev, changes]);\n      setChanges(\"\");\n    }\n  };\n\n  const handleDel = () => {\n    setTodos(prevTodo => prevTodo.splice(0, 1));\n  };\n\n  const handleEdit = () => {\n    setShow(!show); // setTodos([]);\n  };\n\n  const handleUpdateTodo = (value, index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1, value);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        value: changes,\n        onChange: e => setChanges(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        onClick: handleSubmit,\n        children: \"Add To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => show && /*#__PURE__*/_jsxDEV(Todo, {\n      todoProp: todo,\n      onChangeForm: handleUpdateTodo,\n      index: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"del-button\",\n          onClick: handleDel,\n          children: \"Del\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"ltE02IoaM7mCUoZB8CRmoa+C4gc=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Welcome/Documents/Creat React App/todo-list/src/Components/TodoForm.js"],"names":["useState","Todo","TodoForm","changes","setChanges","todos","setTodos","show","setShow","handleSubmit","prev","handleDel","prevTodo","splice","handleEdit","handleUpdateTodo","value","index","newTodos","e","target","map","todo"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC,CAHkB,CAKlB;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,QAAIN,OAAO,KAAK,EAAhB,EAAoB;AAClBG,MAAAA,QAAQ,CAAEI,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUP,OAAV,CAAX,CAAR;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GALD;;AAOA,QAAMO,SAAS,GAAG,MAAM;AACtBL,IAAAA,QAAQ,CAACM,QAAQ,IAAGA,QAAQ,CAACC,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAI;AACrBN,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP,CADqB,CAErB;AACD,GAHD;;AAIA,QAAMQ,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,UAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAJ,CAAjB;AACAa,IAAAA,QAAQ,CAACL,MAAT,CAAgBI,KAAhB,EAAuB,CAAvB,EAA0BD,KAA1B;AACAV,IAAAA,QAAQ,CAACY,QAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAEf,OAFT;AAGE,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,UAAU,CAACe,CAAC,CAACC,MAAF,CAASJ,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEP,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGJ,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOL,KAAP,KACPV,IAAI,iBAAI,QAAC,IAAD;AACN,MAAA,QAAQ,EAAEe,IADJ;AAGN,MAAA,YAAY,EAAEP,gBAHR;AAIN,MAAA,KAAK,EAAEE;AAJD,OAEDA,KAFC;AAAA;AAAA;AAAA;AAAA,YADX,CAXH,eAkBE;AAAA,gBACGZ,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOL,KAAP,kBACT;AAAA,mBACGK,IADH,eAEE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAEX,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAASG,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA7DQf,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoForm() {\r\n  const [changes, setChanges] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  //   console.log(changes);\r\n\r\n  const handleSubmit = () => {\r\n    if (changes !== \"\") {\r\n      setTodos((prev) => [...prev, changes]);\r\n      setChanges(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDel = () => {\r\n    setTodos(prevTodo=> prevTodo.splice(0,1));\r\n  };\r\n\r\n  const handleEdit = ()=>{\r\n    setShow(!show);\r\n    // setTodos([]);\r\n  }\r\n  const handleUpdateTodo = (value, index) => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1, value)\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          className=\"todo-input\"\r\n          value={changes}\r\n          onChange={(e) => setChanges(e.target.value)}\r\n        />\r\n        <button className=\"todo-button\" onClick={handleSubmit}>\r\n          Add To Do\r\n        </button>\r\n      </div>\r\n      {todos.map((todo, index) => (\r\n          show && <Todo\r\n            todoProp={todo}\r\n            key={index}\r\n            onChangeForm={handleUpdateTodo}\r\n            index={index}\r\n          />))}\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index}>\r\n            {todo}\r\n            <button className=\"del-button\" onClick={handleDel}>\r\n              Del\r\n            </button>\r\n            <button onClick={handleEdit}>\r\n                Edit</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}