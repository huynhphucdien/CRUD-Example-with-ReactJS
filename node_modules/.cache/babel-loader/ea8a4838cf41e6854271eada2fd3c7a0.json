{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welcome\\\\Documents\\\\Creat React App\\\\todo-list\\\\src\\\\Components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  const [changes, setChanges] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [editTodo, setEditTodo] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [index, setIndex] = useState();\n\n  const handleSubmit = () => {\n    if (changes !== \"\") {\n      setTodos(prev => [...prev, changes]);\n      setChanges(\"\");\n    }\n  };\n\n  const handleDel = index => {\n    setTodos(todos.filter((_, index1) => index1 !== index)); //index1=[0, 1, 2, 3,...]  index= vị trí click\n  };\n\n  const handleEdit = (todo, index) => {\n    setShow(true);\n    setEditTodo(todo);\n    setIndex(index);\n  };\n\n  const handleUpdateTodo = () => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1, editTodo);\n    setTodos(newTodos); // console.log(todos);\n\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        value: changes,\n        onChange: e => setChanges(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        onClick: handleSubmit,\n        children: \"Add To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        value: editTodo,\n        onChange: e => setEditTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTodo,\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !show && todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"del-button\",\n          onClick: () => handleDel(index),\n          children: \"Del\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(todo, index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"1RTYEDFkWRn4dlRRANrwzI0fBDw=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Welcome/Documents/Creat React App/todo-list/src/Components/TodoForm.js"],"names":["useState","TodoForm","changes","setChanges","todos","setTodos","editTodo","setEditTodo","show","setShow","index","setIndex","handleSubmit","prev","handleDel","filter","_","index1","handleEdit","todo","handleUpdateTodo","newTodos","splice","e","target","value","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction TodoForm() {\r\n  const [changes, setChanges] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [editTodo, setEditTodo] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [index, setIndex] = useState();\r\n\r\n  const handleSubmit = () => {\r\n    if (changes !== \"\") {\r\n      setTodos((prev) => [...prev, changes]);\r\n      setChanges(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDel = (index) => {\r\n    setTodos(todos.filter((_, index1) => index1 !== index)); //index1=[0, 1, 2, 3,...]  index= vị trí click\r\n  };\r\n\r\n  const handleEdit = (todo, index) => {\r\n    setShow(true);\r\n    setEditTodo(todo);\r\n    setIndex(index);\r\n  };\r\n  const handleUpdateTodo = () => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1, editTodo);\r\n    setTodos(newTodos);\r\n    // console.log(todos);\r\n\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          className=\"todo-input\"\r\n          value={changes}\r\n          onChange={(e) => setChanges(e.target.value)}\r\n        />\r\n        <button className=\"todo-button\" onClick={handleSubmit}>\r\n          Add To Do\r\n        </button>\r\n      </div>\r\n\r\n      {show && (\r\n        <>\r\n          <input\r\n            className=\"todo-input\"\r\n            value={editTodo}\r\n            onChange={(e) => setEditTodo(e.target.value)}\r\n          />\r\n          <button onClick={handleUpdateTodo}>update</button>\r\n        </>\r\n      )}\r\n      <ul>\r\n        {!show &&\r\n          todos.map((todo, index) => (\r\n            <li key={index}>\r\n              {todo}\r\n              <button className=\"del-button\" onClick={() => handleDel(index)}>\r\n                Del\r\n              </button>\r\n              <button onClick={() => handleEdit(todo, index)}>Edit</button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}